openapi: 3.0.2
info:
  title: TARge22Dnd-Api
  version: 1.0.0
  description: "### This is swagger api"
paths:
  /services:
    get:
      tags:
        - services
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                List of services:
                  value:
                    - Pedicure with gel polish
                    - Manicure with gel polish
                    - Classic manicure
          description: Returns a list of services
      summary: get a list of all services from api
      description: Returns a list of all services in API
    post:
      requestBody:
        description: A new service to be created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error"
            examples:
              error:
                value:
                  error: some text
        required: true
      tags:
        - new-service
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/new-service"
              examples:
                Example of service:
                  value:
                    name: some text
                    price: 30.36
          description: Services has been created into the array/database
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
          description: One or all params are missing
      summary: Creates a service
      description: creates a new service
  "/services/{id}":
    get:
      tags:
        - details
      parameters:
        - name: id
          in: path
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                Full details of a given service:
                  value: "{id: 1, name: \"Pedicure with gel polish\", price: 45}, \r\n{id: 2, name: \"Manicure with gel polish\", price: 35}, \r\n{id: 3, name: \"Classic manicure\", price: 25, description: \"Massage, nail polish\"},\r\n{id: 4, name: \"Classic pedicure\", price: 40, description: \"Massage, nail polish\"},\r\n{id: 5, name: \"Application of gel nails\", price: 55},\r\n{id: 6, name: \"Gel nails care\", price: 50},\r\n{id: 7, name: \"French Manicure\", price: 30},\r\n{id: 8, name: \"Removal of gel polish\", price: 6},\r\n{id: 9, name: \"Medical pedicure\", price: 50}"
          description: Returns full details of a given id service
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                "Service /w+ was not found ":
                  value: Service \\w+ was not found in services array
          description: Service was not found in services array
      operationId: id
      summary: Get full details of a service
      description: Returns full details of a given id service
    delete:
      tags:
        - delete
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete-service"
              examples:
                delete-service:
                  value:
                    id: "1"
          description: Service has been deleted
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                error:
                  value:
                    error: some text
          description: Servie has not been found
      summary: Delete service
      description: Service is to be able to delete
    parameters:
      - examples:
          Id of a service:
            value: "66"
        name: id
        description: Id of a service
        schema:
          type: integer
        in: path
        required: true
components:
  schemas:
    error:
      title: Root Type for error
      description: ""
      type: object
      properties:
        error:
          type: string
      example:
        error: Error message.
    new-service:
      title: Root Type for new-service
      description: ""
      required:
        - price
        - name
      type: object
      properties:
        name:
          type: string
        price:
          format: float
          type: number
      example:
        name: manicure
        price: 25
    delete-service:
      title: Root Type for delete-service
      description: ""
      required:
        - id
      type: object
      properties:
        id:
          type: string
          example: '{"id": 1}'
      example:
        id: 1
